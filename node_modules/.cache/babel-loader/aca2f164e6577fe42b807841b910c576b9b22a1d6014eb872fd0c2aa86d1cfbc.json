{"ast":null,"code":"import { collection, getDocs, addDoc, getFirestore, deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport favorites from \"../pages/Favorites\";\nconst fetchSneakers = async () => {\n  try {\n    const sneakersCollection = collection(db, \"items\");\n    const snapshot = await getDocs(sneakersCollection);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (err) {\n    console.error(\"Error getting Sneakers:\", err);\n  }\n};\nconst fetchCartSneakers = async () => {\n  try {\n    const cartCollection = collection(db, \"cart\");\n    const snapshot = await getDocs(cartCollection);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (err) {\n    console.error(\"Error getting Sneakers:\", err);\n  }\n};\nconst addSneakerToCart = async sneaker => {\n  try {\n    const cartCollection = collection(db, \"cart\");\n    await addDoc(cartCollection, {\n      id: sneaker.id,\n      title: sneaker.title,\n      price: sneaker.price,\n      imgUrl: sneaker.imgUrl\n    });\n    console.log(\"Sneaker added to cart\", sneaker.id);\n  } catch (err) {\n    console.error(\"Error adding Sneaker to cart:\", err);\n  }\n};\nconst removeItemFromCart = async id => {\n  try {\n    console.log(\"Type of ID:\", typeof id);\n    // const itemId = typeof  id === \"object\" ? id.id : id;\n    // console.log(\"Type of itemId:\", typeof itemId);\n    if (typeof id !== \"string\") {\n      throw new Error(\"itemId should be a string\");\n    }\n    const sneakerItem = doc(db, \"cart\", id);\n    await deleteDoc(sneakerItem);\n    console.log(\"removing succesully\");\n  } catch (err) {\n    console.error(\"deletion did not occur:\", err);\n  }\n};\nconst getFavoritesSneakers = async sneakers => {\n  try {\n    const sneakersCollection = collection(db, \"favorites\");\n    const snapshot = await getDocs(sneakersCollection);\n    return snapshot.docs.map(doc => ({\n      ...doc.data()\n    }));\n  } catch (err) {\n    console.error(\"Error loading favorite sneakers\", err);\n  }\n};\nconst addSneakerToFavorite = async sneaker => {\n  try {\n    const favotirtesCollection = collection(db, \"favorites\");\n    const docRef = await addDoc(favotirtesCollection, {\n      id: sneaker.id,\n      title: sneaker.title,\n      price: sneaker.price,\n      imgUrl: sneaker.imgUrl\n    });\n    console.log(\"Sneaker added to favorite\", docRef.id);\n    return {\n      ...sneaker,\n      firestoreId: docRef.id\n    };\n  } catch (err) {\n    console.error(\"Error adding Sneaker to favorite:\", err);\n  }\n};\nconst removeFromFavorites = async sneaker => {\n  try {\n    const sneakerItem = doc(db, \"favorites\", sneaker.id);\n    await deleteDoc(sneakerItem);\n    console.log(\"successful removing from favorites\");\n  } catch (err) {\n    console.error(\"Error removing Sneaker from favorites:\", err);\n  }\n};\nexport { fetchSneakers, addSneakerToCart, fetchCartSneakers, removeItemFromCart, addSneakerToFavorite, getFavoritesSneakers, removeFromFavorites };","map":{"version":3,"names":["collection","getDocs","addDoc","getFirestore","deleteDoc","doc","db","favorites","fetchSneakers","sneakersCollection","snapshot","docs","map","id","data","err","console","error","fetchCartSneakers","cartCollection","addSneakerToCart","sneaker","title","price","imgUrl","log","removeItemFromCart","Error","sneakerItem","getFavoritesSneakers","sneakers","addSneakerToFavorite","favotirtesCollection","docRef","firestoreId","removeFromFavorites"],"sources":["/Users/natalia_sereda/Documents/FE_2024/react_practice/sneakers_store/src/firebase/firebaseService.js"],"sourcesContent":["import  { collection, getDocs, addDoc, getFirestore, deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport favorites from \"../pages/Favorites\";\n\nconst fetchSneakers  = async () => {\n    try {\n        const sneakersCollection = collection(db, \"items\");\n        const snapshot = await getDocs(sneakersCollection);\n        return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data()}));\n    } catch (err) {\n        console.error(\"Error getting Sneakers:\", err);\n    }\n}\n\nconst fetchCartSneakers  = async () => {\n    try {\n        const cartCollection = collection(db, \"cart\");\n        const snapshot = await getDocs(cartCollection);\n        return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data()}));\n    } catch (err) {\n        console.error(\"Error getting Sneakers:\", err);\n    }\n}\n\nconst addSneakerToCart = async (sneaker) => {\n    try {\n        const cartCollection = collection(db, \"cart\");\n        await addDoc(cartCollection, {\n            id: sneaker.id,\n            title: sneaker.title,\n            price: sneaker.price,\n            imgUrl: sneaker.imgUrl,\n        });\n        console.log(\"Sneaker added to cart\", sneaker.id);\n    } catch (err) {\n        console.error(\"Error adding Sneaker to cart:\", err);\n    }\n};\n\nconst removeItemFromCart = async (id) => {\n    try {\n        console.log(\"Type of ID:\", typeof id);\n        // const itemId = typeof  id === \"object\" ? id.id : id;\n        // console.log(\"Type of itemId:\", typeof itemId);\n        if (typeof id !== \"string\") {\n            throw new Error(\"itemId should be a string\");\n        }\n        const sneakerItem = doc(db, \"cart\", id);\n        await  deleteDoc(sneakerItem);\n        console.log(\"removing succesully\");\n    } catch (err) {\n        console.error(\"deletion did not occur:\", err);\n    }\n}\n\nconst getFavoritesSneakers = async (sneakers) => {\n    try {\n        const sneakersCollection = collection(db, \"favorites\");\n        const snapshot = await getDocs(sneakersCollection);\n        return snapshot.docs.map(doc => ({...doc.data()}));\n    } catch (err) {\n        console.error(\"Error loading favorite sneakers\", err);\n    }\n}\n\nconst addSneakerToFavorite = async (sneaker) => {\n    try {\n        const favotirtesCollection = collection(db, \"favorites\");\n        const docRef = await addDoc(favotirtesCollection, {\n            id: sneaker.id,\n            title: sneaker.title,\n            price: sneaker.price,\n            imgUrl: sneaker.imgUrl,\n        });\n        console.log(\"Sneaker added to favorite\", docRef.id);\n        return { ...sneaker, firestoreId: docRef.id};\n    } catch (err) {\n        console.error(\"Error adding Sneaker to favorite:\", err);\n    }\n};\nconst removeFromFavorites = async (sneaker) => {\n    try {\n        const sneakerItem = doc(db, \"favorites\", sneaker.id);\n        await  deleteDoc(sneakerItem);\n        console.log(\"successful removing from favorites\");\n    } catch (err) {\n        console.error(\"Error removing Sneaker from favorites:\", err);\n    }\n}\n\nexport {\n    fetchSneakers,\n    addSneakerToCart,\n    fetchCartSneakers,\n    removeItemFromCart,\n    addSneakerToFavorite,\n    getFavoritesSneakers,\n    removeFromFavorites,\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}